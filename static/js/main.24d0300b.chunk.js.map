{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","utils/_DATA.js","utils/api.js","redux/actions/types.js","components/presentation/NotFound/index.js","components/presentation/Navbar/navLinks.js","redux/selectors.js","components/container/UserCard/images/leaf.jpg","components/container/UserCard/images/snow.jpg","components/container/UserCard/images/tyler.jpg","components/container/UserCard/index.js","redux/actions/authedUser.js","components/presentation/Navbar/index.js","components/presentation/Layout/unauthed-layout.jpg","components/presentation/Layout/authed-layout.jpg","components/presentation/Layout/index.js","components/container/QuestionForm.js","redux/actions/questions.js","components/presentation/QuestionSwitch/index.js","components/container/QuestionItem.js","components/container/QuestionContainer/index.js","components/container/QuestionAnswerForm.js","components/presentation/QuestionResult.js","components/container/QuestionDisplay.js","components/container/Login.js","routes/PrivateRoute.js","components/container/Leaderboard.js","routes/index.js","components/container/App/index.js","redux/actions/shared.js","redux/actions/users.js","redux/reducers/authedUser.js","redux/reducers/questions.js","redux/reducers/users.js","redux/reducers/index.js","redux/middleware/logger.js","redux/middleware/index.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","SET_AUTHED_USER","UNSET_AUTHED_USER","NotFound","props","className","width","height","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","d","onClick","history","goBack","to","defaultProps","navLinks","color","getAnsweredQuestionsCount","userID","Object","keys","length","getIfAnswered","questionID","q","getQuestion","includes","getLoading","getQuestionIDs","activeCategory","authorID","filterFunc","entries","map","i","filter","reverse","getSubmittedQuestionsCount","getUser","getUserIDs","getSortedUserIDs","values","sort","a","b","UserCard","answeredQuestions","onSetAuthedUser","submittedQuestions","unsetAuthedUser","user","score","src","imgUrl","split","imgName","substr","indexOf","leaf","snow","tyler","getImgName","alt","connect","dispatch","type","Navbar","icon","aria-current","exact","Layout","children","notFound","style","backgroundImage","state","isQuestionNotFound","authedLayout","unauthedLayout","QuestionForm","render","placeholder","value","onChange","target","setState","aria-label","handleSaveQuestion","push","Component","withRouter","saveQuestion","getState","resolveSaveQuestion","catch","err","console","log","QuestionSwitch","active","categories","onSetActiveCategory","category","pathname","QuestionItem","ifAnswered","QuestionContainer","questionIDs","setActiveCategory","setQuestionIDs","componentDidMount","QuestionAnswerForm","selectedOption","getKeyByValueText","object","valueText","find","key","o","checked","htmlFor","handleSaveQuestionAnswer","option","removeAnswer","alert","QuestionResult","totalVotes","votesCount","percentage","round","ifMyOption","right","top","role","aria-valuenow","aria-valuemin","aria-valuemax","QuestionDisplay","params","question_id","Login","from","userIDs","setAuthedUser","PrivateRoute","rest","Leaderboard","Routes","basename","path","App","handleInitialData","loading","showLoading","all","receiveQuestions","receiveUsers","hideLoading","action","updatedOptionAdd","updatedOptionRemove","RECEIVE_QUESTIONS","SAVE_QUESTION","SAVE_QUESTION_ANSWER","REMOVE_QUESTION_ANSWER","updatedQuestions","updatedAnswersAdd","updatedAnswersRemove","undefined","RECEIVE_USERS","combineReducers","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducers","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.24d0300b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n                console.log(\r\n                    'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.',\r\n                );\r\n\r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n\r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n      .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n        // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: '../../images/snow.jpg',\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: '../../images/tyler.jpg',\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: '../../images/leaf.jpg',\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionOne'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillian'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question)\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","// Required imports\r\nimport {\r\n  _getUsers,\r\n  _getQuestions,\r\n  _saveQuestion,\r\n  _saveQuestionAnswer\r\n} from './_DATA.js';\r\n\r\n/**\r\n * Gets initial data\r\n * @return {promise}\r\n */\r\nexport const getInitialData = () =>\r\n  Promise.all([_getUsers(), _getQuestions()]).then(([users, questions]) => ({\r\n    users,\r\n    questions\r\n  }));\r\n\r\n/**\r\n * Saves a question\r\n * @param {question} question\r\n * @return {(question: question) => promise}\r\n */\r\nexport const saveQuestion = (question) =>  _saveQuestion(question);\r\n\r\n/**\r\n * Saves a user's answer to a question\r\n * @param {answerInfo} info\r\n * @return {(info: answerInfo) => promise}\r\n */\r\nexport const saveQuestionAnswer = (info) => _saveQuestionAnswer(info);\r\n","/**\n * @const {string}\n */\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER';\n/**\n * @const {string}\n */\nexport const UNSET_AUTHED_USER = 'UNSET_AUTHED_USER';\n/**\n * @const {string}\n */\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\n/**\n * @const {string}\n */\nexport const RECEIVE_USERS = 'RECEIVE_USERS';\n/**\n * @const {string}\n */\nexport const REMOVE_QUESTION_ANSWER = 'REMOVE_QUESTION_ANSWER';\n/**\n * @const {string}\n */\nexport const SAVE_QUESTION = 'SAVE_QUESTION';\n/**\n * @const {string}\n */\nexport const SAVE_QUESTION_ANSWER = 'SAVE_QUESTION_ANSWER';\n","// Module import\nimport {FaChevronLeft, FaHome} from 'react-icons/fa';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Style import\nimport './notfound.min.css';\n\n/**\n * NotFound component\n * @component\n * @param {object} props\n * @return {object} - The UI DOM object\n *\n * @example\n * return <NotFound />\n */\nconst NotFound = (props) => (\n  <div className=\"d-flex justify-content-center align-items-center h-100\">\n    <svg\n      width=\"380px\"\n      height=\"500px\"\n      viewBox=\"0 0 837 1045\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"d-none d-sm-block me-sm-4\"\n    >\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <path\n          d=\"M353,9 L626.664028,170 L626.664028,487 L353,642\n            L79.3359724,487 L79.3359724,170 L353,9 Z\"\n          className=\"polygon\"\n          id=\"Polygon-1\"\n          stroke=\"var(--tylermcginnis)\"\n          strokeWidth=\"6\"\n        />\n        <path\n          d=\"M78.5,529 L147,569.186414 L147,648.311216 L78.5,687\n            L10,648.311216 L10,569.186414 L78.5,529 Z\"\n          className=\"polygon\"\n          id=\"Polygon-2\"\n          stroke=\"#EF4A5B\"\n          strokeWidth=\"6\"\n        />\n        <path\n          d=\"M773,186 L827,217.538705 L827,279.636651 L773,310\n            L719,279.636651 L719,217.538705 L773,186 Z\"\n          className=\"polygon\"\n          id=\"Polygon-3\"\n          stroke=\"#795D9C\"\n          strokeWidth=\"6\"\n        />\n        <path\n          d=\"M639,529 L773,607.846761 L773,763.091627 L639,839\n            L505,763.091627 L505,607.846761 L639,529 Z\"\n          className=\"polygon\"\n          id=\"Polygon-4\"\n          stroke=\"var(--sarahedo)\"\n          strokeWidth=\"6\"\n        />\n        <path\n          d=\"M281,801 L383,861.025276 L383,979.21169 L281,1037\n            L179,979.21169 L179,861.025276 L281,801 Z\"\n          className=\"polygon\"\n          id=\"Polygon-5\"\n          stroke=\"var(--johndoe)\"\n          strokeWidth=\"6\"\n        />\n      </g>\n    </svg>\n\n    <div className=\"message-box ms-sm-4\">\n      <h1>404</h1>\n      <p>Page not found</p>\n      <div>\n        <div>\n          <button\n            className=\"btn btn-link ps-0 me-3\"\n            onClick={props.history.goBack}\n          >\n            <FaChevronLeft />\n            <span className=\"ms-1\">Go Back</span>\n          </button>\n          <Link className=\"btn btn-link ps-0 me-3\" to=\"/\">\n            <FaHome />\n            <span className=\"ms-1\">Go Home</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nNotFound.propTypes = {\n  history: PropTypes.object,\n};\n\nNotFound.defaultProps = {\n  history: {},\n};\n\n// NotFound export\nexport default NotFound;\n","// Module imports\nimport {FaHome, FaPlus, FaPoll} from 'react-icons/fa';\n\n/**\n * @type {navLink[]}\n */\nconst navLinks = [\n  {\n    'text': 'home',\n    'to': '/',\n    'icon': <FaHome />,\n  },\n  {\n    'text': 'leaderboard',\n    'to': '/leaderboard',\n    'icon': <FaPoll />,\n  },\n  {\n    'text': 'new question',\n    'to': '/add',\n    'icon': <FaPlus color=\"#fff\" />,\n  },\n];\n\n// navLinks export\nexport default navLinks;\n","/**\n * Get number of questions a user has amswered\n * @param {users} users - users from state\n * @param {id} userID - particular userID\n * @return {number}\n */\nexport const getAnsweredQuestionsCount = (users, userID) =>\n  Object.keys((users[userID] && users[userID].answers) || {}).length;\n\n/**\n * Gets if question is answered by authed user\n * @param {id} authedUser - authed user from state\n * @param {id} questionID - question id of a particular question\n * @param {questions} questions - questions from state\n * @param {question} q - question object\n * @return {boolean}\n */\nexport const getIfAnswered = (authedUser, questionID, questions, q) => {\n  const question = q || getQuestion(questionID, questions);\n\n  return (\n    (question?.optionOne?.votes || []).includes(authedUser) ||\n    (question?.optionTwo?.votes || []).includes(authedUser)\n  );\n};\n\n/**\n * Get Laoding status\n * @param {questions} questions - questions from state\n * @param {users} users - users from state\n * @return {boolean}\n */\nexport const getLoading = (questions, users) =>\n  Object.keys(questions) < 1 && Object.keys(users) < 1;\n\n/**\n * Get question\n * @param {id} questionID - particular questionID\n * @param {questions} questions - questions from state\n * @return {question}\n */\nexport const getQuestion = (questionID, questions) => questions[questionID];\n\n/**\n * Get question IDs\n * @param {questions} questions - questions from state\n * @param {string} activeCategory - active question category\n * @param {id} authorID - particular Author ID\n * @param {id} authedUser - authed user ID\n * @return {id[]}\n */\nexport const getQuestionIDs = (\n    questions,\n    activeCategory,\n    authorID,\n    authedUser,\n) => {\n  const filterFunc = (q) =>\n    activeCategory === 'answered' ?\n      getIfAnswered(authedUser, null, null, q) :\n      !getIfAnswered(authedUser, null, null, q);\n\n  return (authorID ?\n    Object.entries(questions)\n        .map((i) => i[1])\n        .filter(\n            (question) => filterFunc(question) && question?.author === authorID,\n        )\n        .map((i) => i?.id) :\n    Object.entries(questions)\n        .map((i) => i[1])\n        .filter((question) => filterFunc(question))\n        .map((i) => i?.id)\n  ).reverse();\n};\n\n/**\n * Get number of questions a user has submitted\n * @param {users} users - users from state\n * @param {id} userID - particular userID\n * @return {number}\n */\nexport const getSubmittedQuestionsCount = (users, userID) =>\n  (users[userID]?.questions || []).length;\n\n/**\n * Get user\n * @param {id} userID - particular userID\n * @param {users} users - users from state\n * @return {user}\n */\nexport const getUser = (userID, users) => users[userID];\n\n/**\n * Get userIDs\n * @param {users} users - users from state\n * @return {id[]}\n */\nexport const getUserIDs = (users) => Object.keys(users);\n\n/**\n * Get userIDs\n * @param {users} users - users from state\n * @return {id[]}\n */\nexport const getSortedUserIDs = (users) =>\n  Object.values(users)\n      .sort(\n          (a, b) =>\n            Object.keys(b.answers).length +\n        b.questions.length -\n        (Object.keys(a.answers).length + a.questions.length),\n      )\n      .map(({id}) => id);\n","export default __webpack_public_path__ + \"static/media/leaf.90998857.jpg\";","export default __webpack_public_path__ + \"static/media/snow.279b64a1.jpg\";","export default __webpack_public_path__ + \"static/media/tyler.b1b3df1e.jpg\";","// Module imports\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {FaPowerOff} from 'react-icons/fa';\n\n// Action imports\nimport {unsetAuthedUser} from 'redux/actions/authedUser';\n\n// Selector import\nimport {\n  getAnsweredQuestionsCount,\n  getSubmittedQuestionsCount,\n  getUser,\n} from 'redux/selectors';\n\n// Style import\nimport './usercard.css';\n\n// Media imports\nimport leaf from './images/leaf.jpg';\nimport snow from './images/snow.jpg';\nimport tyler from './images/tyler.jpg';\n\n/**\n * UserCard component\n * @component\n * @param {{\n * className: string,\n * onSetAuthedUser: function,\n * unsetAuthedUser: function,\n * user: user,\n * userID: string,\n * }} props\n * @return {object} - The UI DOM object\n *\n * @example\n * const className = 'card--navbar'\n * const userID = \"sarahedo\"\n * const onSetAuthedUser = () => action\n *\n * return <UserCard userID={userID} onSetAuthedUser={setAuthedUser}  />\n */\nconst UserCard = (props) => {\n  const {\n    answeredQuestions,\n    authedUser,\n    className,\n    onSetAuthedUser,\n    submittedQuestions,\n    unsetAuthedUser,\n    user,\n  } = props;\n  const userID = props.userID || authedUser;\n  const {avatarURL, name} = user;\n  const score = answeredQuestions + submittedQuestions;\n\n  const getImgName = () => {\n    const imgUrl = (avatarURL || '').split('/');\n    const length = imgUrl.length;\n    const imgName = imgUrl[length - 1].substr(\n        0,\n        imgUrl[length - 1].indexOf('.'),\n    );\n\n    return {leaf, snow}[imgName] || tyler;\n  };\n\n  return (\n    <div\n      className={`col-12 ${className}`}\n      onClick={() => onSetAuthedUser && onSetAuthedUser(userID)}\n    >\n      <div className=\"user-info\">\n        <div className=\"rounded-circle img-holder\">\n          <img src={getImgName()} className=\"img-fluid\" alt={userID} />\n        </div>\n        <div>\n          <p className=\"card-title\">{name}</p>\n          <p className=\"text-muted card-id\">@{userID}</p>\n        </div>\n      </div>\n      <div className=\"user-info--extra\">\n        <div className=\"user-stats user-stats--individual text-center flex-row\">\n          <div className=\"user-stat flex-grow-1\">\n            <p className=\"fw-bold mb-2 question-count\">answered</p>\n            <p className={`text-${userID} text-count`}>{answeredQuestions}</p>\n          </div>\n          <div className=\"user-stat flex-grow-1\">\n            <p className=\"fw-bold mb-2 question-count\">submitted</p>\n            <p className={`text-${userID} text-count`}>{submittedQuestions}</p>\n          </div>\n        </div>\n        <div className=\"user-stats user-stats--total text-center\">\n          <p className={`text--${userID} display-4 fw-bold`}>{score}</p>\n          <p className=\" text-uppercase question-count\">score</p>\n        </div>\n        {authedUser === userID && (\n          <button\n            className=\"btn btn-danger w-100 rounded-pill\"\n            onClick={unsetAuthedUser}\n          >\n            <span className=\"d-none d-xl-block\">Logout</span>\n            <span className=\"d-xl-none\">\n              <FaPowerOff />\n            </span>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nUserCard.propTypes = {\n  answeredQuestions: PropTypes.number,\n  authedUser: PropTypes.string,\n  /**\n   * UserCard className\n   */\n  className: PropTypes.string.isRequired,\n  /**\n   * UserCard onSetAuthedUser\n   */\n  onSetAuthedUser: PropTypes.func,\n  submittedQuestions: PropTypes.number,\n  unsetAuthedUser: PropTypes.func,\n  user: PropTypes.object,\n  /**\n   * UserCard userID\n   */\n  userID: PropTypes.string.isRequired,\n};\n\nUserCard.defaultProps = {\n  answeredQuestions: 0,\n  authedUser: '',\n  className: '',\n  onSetAuthedUser: null,\n  submittedQuestions: 0,\n  unsetAuthedUser: null,\n  user: {},\n  userID: '',\n};\n\n/**\n * Maps state to UserCard component props\n * @param {state} state\n * @param {{userID: id}} ownProps\n * @return {{answeredQuestions: number, submittedQuestions: number, user: user}}\n */\nconst mapStateToProps = ({authedUser, users}, {userID}) => ({\n  answeredQuestions: getAnsweredQuestionsCount(users, userID || authedUser),\n  authedUser,\n  submittedQuestions: getSubmittedQuestionsCount(users, userID || authedUser),\n  user: getUser(userID || authedUser, users),\n});\n\n// UserCard export\nexport default connect(mapStateToProps, {unsetAuthedUser})(UserCard);\n","// Type imports\nimport {SET_AUTHED_USER, UNSET_AUTHED_USER} from 'redux/actions/types';\n\n/**\n * Action creator to unset authed user\n * @return {action} - The action to dispatch\n */\nexport const unsetAuthedUser = () => (dispatch) =>\n  dispatch({type: UNSET_AUTHED_USER});\n\n/**\n * Action creator to unset authed user\n * @param {id} userID - ID of user to login\n * @return {action} - The action to dispatch\n */\nexport const setAuthedUser = (userID) => ({type: SET_AUTHED_USER, userID});\n","// Module imports\nimport PropTypes from 'prop-types';\nimport {NavLink, Link} from 'react-router-dom';\n\n// Data imports\nimport navLinks from './navLinks';\n\n// Component imports\nimport UserCard from 'components/container/UserCard';\n\n// Style import\nimport './navbar.css';\n\n/**\n * Navbar component\n * @component\n * @return {object} - The UI DOM object\n *\n * @example\n * const authedUser = 'sarahedo'\n * return <Navbar authedUser={authedUser} />\n */\nconst Navbar = ({authedUser}) => (\n  <nav className=\"navbar navbar-expand navbar-light fixed-top\" id=\"navbar\">\n    <div className=\"container px-xl-4\">\n      <Link\n        className=\"navbar-brand fw-bolder\n        text-white fs-2 me-xl-5 my-xl-3\"\n        to=\"/\"\n      >\n        wyr.\n      </Link>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav ms-auto ms-xl-5 my-3\">\n          {navLinks.map(({icon, text, to}) => (\n            <li\n              key={text}\n              className=\"nav-item text-capitalize fw-bold\"\n            >\n              <NavLink\n                className=\"nav-link nav-link--custom mx-sm-3\"\n                aria-current=\"page\"\n                to={to}\n                exact={to === '/'}\n              >\n                {text !== 'new question' ? (\n                  <div>\n                    <span className=\"d-xl-none fs-1\">{icon}</span>\n                    <span className=\"d-none d-xl-block\">{text}</span>\n                  </div>\n                ) : (\n                  <>\n                    <span className=\"d-xl-none fs-1\">{icon}</span>\n                    <span className=\"d-none d-xl-block\">{text}</span>\n\n                    {/* <button\n                      type=\"button\"\n                      className=\"btn bg-tylermcginnis d-xl-none\n                      shadow rounded-circle add\"\n                      aria-label=\"Add\"\n                      typpe=\"button\"\n                    >\n                      {icon}\n                    </button> */}\n                  </>\n                )}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n        {authedUser && (\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item text-capitalize fw-bold\">\n              <UserCard className=\"card--navbar d-flex\" />\n            </li>\n          </ul>\n        )}\n      </div>\n    </div>\n  </nav>\n);\n\nNavbar.propTypes = {\n  /**\n   * Navbar authedUser\n   */\n  authedUser: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  authedUser: '',\n};\n\n// Navbar export\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/unauthed-layout.9984465c.jpg\";","export default __webpack_public_path__ + \"static/media/authed-layout.38ac6be1.jpg\";","// Module imports\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport Navbar from 'components/presentation/Navbar';\nimport UserCard from 'components/container/UserCard';\n\n// Image imports\nimport unauthedLayout from './unauthed-layout.jpg';\nimport authedLayout from './authed-layout.jpg';\n\n// Style import\nimport './layout.css';\n\n/**\n * Layout component\n * @component\n * @return {object} - The UI DOM object\n *\n * @example\n * const authedUser = 'sarahedo'\n * return <Layout authedUser={authedUser} notFound={notFound}><Login /></Layout>\n */\nconst Layout = ({authedUser, children, notFound, location}) => (\n  <div\n    className={`${!authedUser && 'h-100'} container--layout`}\n    style={{\n      backgroundImage:\n        authedUser || location?.state?.isQuestionNotFound || notFound ?\n          `url(${authedLayout})` :\n          `url(${unauthedLayout})`,\n    }}\n  >\n    <Navbar authedUser={authedUser} />\n    <div className={`${!authedUser && 'h-100'} container px-4`}>\n      <div\n        className={`row ${\n          authedUser ? 'row--authed' : 'h-100 align-items-center'\n        }`}\n      >\n        {authedUser && !location?.state?.isQuestionNotFound && (\n          <UserCard\n            className={`card--authed col-xl-2\n            d-none d-xl-block position-fixed shadow py-3 px-4`}\n          />\n        )}\n        <div\n          className={\n            authedUser && !location?.state?.isQuestionNotFound ?\n              `col-12 col-xl offset-xl-3 mt-5 py-5 py-xl-0` :\n              ''\n          }\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLayout.propTypes = {\n  /**\n   * Layout's authedUser\n   */\n  authedUser: PropTypes.string,\n  children: PropTypes.element,\n  location: PropTypes.object,\n  /**\n   * Layout notFound\n   */\n  notFound: PropTypes.bool,\n};\n\nLayout.defaultProps = {\n  authedUser: '',\n  notFound: false,\n};\n\n// Layout export\nexport default Layout;\n","// Module import\nimport {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Action creator imports\nimport {handleSaveQuestion} from 'redux/actions/questions';\nimport {withRouter} from 'react-router-dom';\n\n/**\n * QuestionForm component\n * @component\n * @constructor\n *\n * @example\n * return <QuestionForm />\n */\nclass QuestionForm extends Component {\n  state = {\n    optionOneText: '',\n    optionTwoText: '',\n  };\n\n  static propTypes = {\n    authedUser: PropTypes.string,\n    handleSaveQuestion: PropTypes.func,\n    history: PropTypes.object,\n  };\n\n  static defaultProps = {\n    authedUser: '',\n    handleSaveQuestion: () => {},\n    history: {},\n  };\n\n  /**\n   * Renders QuestionForm component\n   * @return {object} - The UI DOM object\n   */\n  render = () => {\n    const {optionOneText, optionTwoText} = this.state;\n    const {authedUser, history} = this.props;\n\n    return (\n      <div>\n        <h2>Create New Question</h2>\n        <p className=\"text-muted\">Complete the question</p>\n        <p className=\"lead mt-4 mb-2\">Would you rather...</p>\n        <form className=\"form w-50\">\n          <div className=\"my-3\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control--custom\"\n              placeholder=\"Enter option one text here...\"\n              value={optionOneText}\n              onChange={({target}) =>\n                this.setState({optionOneText: target.value})\n              }\n              aria-label=\"Option One\"\n            />\n          </div>\n          <p className=\"text-center fw-bold\">OR</p>\n          <div className=\"my-3\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control--custom\"\n              placeholder=\"Enter option one text here...\"\n              value={optionTwoText}\n              onChange={({target}) =>\n                this.setState({optionTwoText: target.value})\n              }\n              aria-label=\"Option Two\"\n            />\n          </div>\n\n          <button\n            className={`btn bg-${authedUser}\n            fw-bold px-3 py-1 my-2 rounded-pill text-white`}\n            onClick={() =>\n              this.props\n                  .handleSaveQuestion({\n                    author: authedUser,\n                    optionOneText,\n                    optionTwoText,\n                  })\n                  .then(() => history.push('/'))\n            }\n            type=\"button\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  };\n}\n\n/**\n * Maps state to QuestionForm component props\n * @param {state} state\n * @return {{authedUser: id}}\n */\nconst mapStateToProps = ({authedUser}) => ({authedUser});\n\n// QuestionForm export\nexport default withRouter(\n    connect(mapStateToProps, {handleSaveQuestion})(QuestionForm),\n);\n","// Type imports\nimport {\n  RECEIVE_QUESTIONS,\n  REMOVE_QUESTION_ANSWER,\n  SAVE_QUESTION,\n  SAVE_QUESTION_ANSWER,\n} from 'redux/actions/types';\nimport {saveQuestion, saveQuestionAnswer} from 'utils/api';\n\n/**\n * Action creator for received questions\n * @param {questions} questions - Questions received from fetch\n * @return {action} - Action to dispatch\n */\nexport const receiveQuestions = (questions) => ({\n  type: RECEIVE_QUESTIONS,\n  questions,\n});\n\nexport const resolveSaveQuestion = (question) => (dispatch, getState) =>\n  dispatch({\n    type: SAVE_QUESTION,\n    questionID: question.id,\n    question,\n    userID: getState().authedUser,\n  });\n\nexport const handleSaveQuestion = (question) => (dispatch) =>\n  saveQuestion(question)\n      .then((formattedQuestion) =>\n        dispatch(resolveSaveQuestion(formattedQuestion)),\n      )\n      .catch((err) => console.log(err));\n\n/**\n * Action creator to remove answer to a question\n * @param {string} option - The option text\n * @param {id} questionID - The id of the question\n * @param {id} userID - The id of the user\n * @return {action}\n */\nexport const removeAnswer = (option, questionID, userID) => ({\n  type: REMOVE_QUESTION_ANSWER,\n  questionID,\n  option,\n  userID,\n});\n\n/**\n * Action creator to save answer to a question\n * @param {string} option - The option text\n * @param {id} questionID - The id of the question\n * @param {id} userID - The id of the user\n * @return {action}\n */\nexport const saveAnswer = (option, questionID, userID) => ({\n  type: SAVE_QUESTION_ANSWER,\n  questionID,\n  option,\n  userID,\n});\n\nexport const handleSaveQuestionAnswer = (authedUser, qid, answer) => (\n    dispatch,\n) => {\n  dispatch(saveAnswer(answer, qid, authedUser));\n\n  return saveQuestionAnswer({authedUser, qid, answer}).catch((err) => {\n    dispatch(removeAnswer(answer, qid, authedUser));\n    alert('An error occured. Try again ...');\n  });\n};\n","// Module imports\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n// Style import\nimport './questionswitch.css';\n\n/**\n * QuestionSwitch Component\n * @component\n * @return {object} - The UI DOM object\n *\n * @example\n * const active = ''\n * const categories = []\n * const onSetActiveCategory = () => {}\n *\n * return <QuestionSwitch\n *          active={active}\n *          categories={categories}\n *          onSetActiveCategory={setActiveCategory}\n *          />\n */\nconst QuestionSwitch = ({\n  active,\n  categories,\n  onSetActiveCategory,\n}) => (\n  <ul className=\"nav nav-pills nav-fill\">\n    {categories.map((category) => (\n      <li\n        key={category}\n        className=\"nav-item\"\n        onClick={() => onSetActiveCategory(category)}\n      >\n        <Link\n          className={`nav-link ${\n            active === category && 'active'\n          } nav-link--switch`}\n          to={(location) => ({\n            pathname: location.pathname,\n          })}\n        >\n          {category}\n        </Link>\n      </li>\n    ))}\n  </ul>\n);\n\nQuestionSwitch.propTypes = {\n  /**\n   * QuestionSwitch active\n   */\n  active: PropTypes.string.isRequired,\n  /**\n   * QuestionSwitch categories\n   */\n  categories: PropTypes.array.isRequired,\n  /**\n   * QuestionSwitch onSetActiveCategory\n   */\n  onSetActiveCategory: PropTypes.func.isRequired,\n};\n\nQuestionSwitch.defaultProps = {\n  active: '',\n  categories: [],\n  onSetActiveCategory: () => {},\n};\n\n// QuestionSwitch export\nexport default QuestionSwitch;\n","// Module import\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport UserCard from 'components/container/UserCard';\n\n// Selector import\nimport {getIfAnswered, getQuestion} from 'redux/selectors';\nimport {Link} from 'react-router-dom';\n\n/**\n * QuestionItem component\n * @component\n * @param {{question: question, setActiveQuestion: function}} props\n * @return {object} - The UI DOM object\n *\n * @example\n * const questionID = ''\n * return <QuestionItem  questionID={questionID} />\n */\nconst QuestionItem = (props) => (\n  <div\n    className=\"shadow my-3 p-3 rounded d-flex\n  question-item align-items-center bg-white flex-wrap\"\n  >\n    <div className=\"question--user-container just-width mb-3 mb-md-0 mx-auto\">\n      <UserCard\n        className=\"card--user-question\"\n        userID={props.question?.author}\n      />\n    </div>\n    <div className=\"question-details flex-grow-1 ms-3 text-center\">\n      <h5>Would You Rather?</h5>\n      <p>\n        {props.question?.optionOne?.text}\n        <br />\n        or...\n      </p>\n      <Link\n        to={`/questions/${props.question?.id}`}\n        className=\"btn btn-link mt-2\"\n      >\n        {props.ifAnswered ? 'View results' : 'Answer Poll'}\n      </Link>\n    </div>\n  </div>\n);\n\nQuestionItem.propTypes = {\n  ifAnswered: PropTypes.bool,\n  question: PropTypes.object,\n  /**\n   * QuestionItem questionID\n   */\n  questionID: PropTypes.string.isRequired,\n};\n\nQuestionItem.defaultProps = {\n  ifAnswered: false,\n  question: {},\n  questionID: '',\n};\n\n/**\n * Maps state to QuestionItem component props\n * @param {state} state\n * @param {{questionID: id}} ownProps\n * @return {{question: question}}\n */\nconst mapStateToProps = ({authedUser, questions}, {questionID}) => ({\n  ifAnswered: getIfAnswered(authedUser, questionID, questions),\n  question: getQuestion(questionID, questions),\n});\n\n// QuestionItem export\nexport default connect(mapStateToProps)(QuestionItem);\n","// Module imports\nimport {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport QuestionSwitch from 'components/presentation/QuestionSwitch';\nimport QuestionItem from 'components/container/QuestionItem';\n\n// Data import\nimport categories from './categories';\n\n// Selector imports\nimport {getQuestionIDs} from 'redux/selectors';\n\n/**\n * QuestionContainer component\n * @component\n * @constructor\n *\n * @example\n * const authorID = ''\n * return <QuestionContainer authorID={authorID} />\n */\nclass QuestionContainer extends Component {\n  /**\n   * QuestionContainer state\n   * @type {{activeCategory: string, questionIDs: id[]}}\n   */\n  state = {\n    activeCategory: '',\n    questionIDs: [],\n  };\n\n  static propTypes = {\n    authedUser: PropTypes.string,\n    /**\n     * QuestionContainer authorID\n     */\n    authorID: PropTypes.string,\n    questions: PropTypes.object,\n  };\n\n  static defaultProps = {\n    authedUser: '',\n    authorID: '',\n    questions: {},\n  };\n\n  /**\n   * Sets the question category to display\n   * @param {string} activeCategory\n   * @return {Promise<object>}\n   */\n  setActiveCategory = (activeCategory) =>\n    this.setState(\n        () => ({activeCategory}),\n        this.setQuestionIDs(activeCategory, this.props.questions),\n    );\n\n  /**\n   * Sets the question category to display\n   * @param {string} activeCategory\n   * @param {object} questions\n   */\n  setQuestionIDs = (activeCategory, questions) => {\n    const questionIDs =\n      getQuestionIDs(\n          questions,\n          activeCategory,\n          this.props.authorID,\n          this.props.authedUser,\n      ) || [];\n\n    this.setState(() => ({questionIDs}));\n  };\n\n  /**\n   * Executes once component mounts\n   * @return {function}\n   */\n  componentDidMount = () => this.setActiveCategory(categories[0]);\n\n  /**\n   * Renders QuestionContainer UI\n   * @return {object} - The UI DOM object\n   */\n  render = () => (\n    <div>\n      <QuestionSwitch\n        categories={categories}\n        active={this.state.activeCategory}\n        onSetActiveCategory={this.setActiveCategory}\n      />\n      {this.state.questionIDs.length > 0 ? (\n        this.state.questionIDs.map((questionID) => (\n          <QuestionItem key={questionID} questionID={questionID} />\n        ))\n      ) : (\n        <h4 className=\"p-4 text-center\">No questions here</h4>\n      )}\n    </div>\n  );\n}\n\n/**\n * Maps state to QuestionContainer component props\n * @param {state} state\n * @return {{authedUser: id, questions: questions}}\n */\n// const mapStateToProps = ({questions}, {authorID}) => ({\n//   questionIDs: ,\n// });\nconst mapStateToProps = ({authedUser, questions}) => ({\n  authedUser,\n  questions,\n});\n\n// QuestionContainer export\nexport default connect(mapStateToProps)(QuestionContainer);\n","// Module imports\nimport {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Action creator imports\nimport {handleSaveQuestionAnswer} from 'redux/actions/questions';\n\n/**\n * QuestionAnswerForm component\n * @component\n * @constructor\n *\n * @example\n * const authedUser = {}\n * const question = {}\n * return <QuestionAnswerForm authedUser={authedUser} question={question} />\n */\nclass QuestionAnswerForm extends Component {\n  state = {\n    selectedOption: '',\n  };\n\n  static propTypes = {\n    authedUser: PropTypes.string.isRequired,\n    handleSaveQuestionAnswer: PropTypes.func,\n    question: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    /**\n     * QuestionAnswerForm authedUser\n     */\n    authedUser: '',\n    handleSaveQuestionAnswer: () => {},\n    /**\n     * QuestionAnswerForm question\n     */\n    question: {},\n  };\n\n  /**\n   * Gets object key by value\n   * @param {object} object\n   * @param {string} valueText\n   * @return {string}\n   */\n  getKeyByValueText = (object, valueText) =>\n    Object.keys(object).find((key) => object[key]?.text === valueText);\n\n  /**\n   * Executes on component mount\n   * @return {Promise<object>}\n   */\n  componentDidMount = () =>\n    this.setState({\n      selectedOption: this.getKeyByValueText(\n          this.props.question,\n          this.props.question?.optionOne?.text,\n      ),\n    });\n\n  /**\n   * Renders the QuestionAnswerForm component\n   * @return {object} - The UI Dom object\n   */\n  render = () => {\n    const {authedUser, question} = this.props;\n    const {selectedOption} = this.state;\n\n    return (\n      <>\n        <h4>Would You Rather</h4>\n        <form className=\"form mt-3\">\n          {[question?.optionOne, question?.optionTwo].map((o) => (\n            <div className=\"form-check pointer mb-2\" key={o?.text}>\n              <input\n                aria-label={o?.text}\n                className=\"form-check-input\"\n                type=\"radio\"\n                id={o?.text}\n                name={question?.id}\n                value={this.getKeyByValueText(question, o?.text)}\n                checked={\n                  selectedOption === this.getKeyByValueText(question, o?.text)\n                }\n                onChange={({target}) =>\n                  this.setState({selectedOption: target.value})\n                }\n              />\n              <label className=\"form-check-label pointer\" htmlFor={o?.text}>\n                {o?.text}\n              </label>\n            </div>\n          ))}\n\n          <button\n            className={`btn bg-${question?.author}\n    rounded-pill text-white mt-3 px-4`}\n            type=\"button\"\n            onClick={() =>\n              this.props.handleSaveQuestionAnswer(\n                  authedUser,\n                  question?.id,\n                  selectedOption,\n              )\n            }\n          >\n            Submit\n          </button>\n        </form>\n      </>\n    );\n  };\n}\n\n// QuestionAnswerForm export\nexport default connect(null, {handleSaveQuestionAnswer})(QuestionAnswerForm);\n","// Module imports\nimport PropTypes from 'prop-types';\n\n/**\n * QuestionResult component\n * @param {{question: question}} props\n * @return {object} - The UI DOM object\n *\n * @example\n * const authedUser = ''\n * const question = {}\n * return <QuestionResult authedUser={authedUser} question={question} />\n */\nconst QuestionResult = ({authedUser, question}) => {\n  const totalVotes = [\n    ...(question?.optionOne?.votes || []),\n    ...(question?.optionTwo?.votes || []),\n  ].length;\n\n  return (\n    <>\n      <h4>Results:</h4>\n\n      {[question?.optionOne, question?.optionTwo].map((o) => {\n        const votesCount = o?.votes?.length;\n        const percentage = Math.round((votesCount / totalVotes) * 100);\n\n        const ifMyOption = (o?.votes || []).includes(authedUser);\n\n        return (\n          <div\n            className={`card ${\n              ifMyOption && `bg-${authedUser} text-white`\n            } mt-5 p-3`}\n            key={o?.text}\n          >\n            <p className=\"lead\">Would you rather {o?.text}?</p>\n\n            {ifMyOption && (\n              <span\n                className={`shadow bg-white text--${authedUser}\n              py-2 px-3 position-absolute rounded-circle fw-bolder`}\n                style={{right: '-10px', top: '-30px'}}\n              >\n                Your\n                <br />\n                Vote\n              </span>\n            )}\n\n            <div className=\"progress my-1\" style={{height: '20px'}}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                style={{width: `${percentage}%`}}\n                aria-valuenow={percentage}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              >\n                {`${percentage}%`}\n              </div>\n            </div>\n            <p className=\"fw-bolder x-large\">\n              {`${votesCount} out of ${totalVotes}`}\n            </p>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nQuestionResult.propTypes = {\n  authedUser: PropTypes.string,\n  question: PropTypes.object,\n};\n\nQuestionResult.defaultProps = {\n  /**\n   * QuestionResult authedUser\n   */\n  authedUser: '',\n  /**\n   * QuestionResult question\n   */\n  question: {},\n};\n\n// QuestionResult export\nexport default QuestionResult;\n","// Module imports\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\n// Component imports\nimport UserCard from 'components/container/UserCard';\nimport QuestionAnswerForm from './QuestionAnswerForm';\nimport QuestionResult from '../presentation/QuestionResult';\n\n// Selector imports\nimport {getIfAnswered, getQuestion} from 'redux/selectors';\nimport {Link, Redirect, withRouter} from 'react-router-dom';\n\n/**\n * QuestionDisplay component\n * @component\n * @constructor\n *\n * @example\n * const questionID = '';\n * return <QuestionDisplay questionID={questionID} />\n */\nconst QuestionDisplay = ({authedUser, match, ifAnswered, question}) =>\n  !question?.id ? (\n    <Redirect to={{pathname: '/404', state: {isQuestionNotFound: true}}} />\n  ) : (\n    <div\n      className=\"card card--question-display\n      d-flex flex-wrap align-items-center py-3 my-5 my-xl-0\"\n    >\n      {console.log(match)}\n      <div className=\"just-width mx-auto mb-3 mb-sm-0 text-center px-4\">\n        <UserCard userID={question?.author} />\n      </div>\n      <div\n        className=\"flex-grow-1 py-2 px-4 border border-secondary\n        border-top-0 border-end-0 border-bottom-0\"\n      >\n        {ifAnswered ? (\n          <QuestionResult authedUser={authedUser} question={question} />\n        ) : (\n          <QuestionAnswerForm authedUser={authedUser} question={question} />\n        )}\n        <p className=\"mt-3 float-end\">\n          <Link\n            to=\"/\"\n            className=\"btn bg-light--custom rounded-pill fw-bold mx-auto\"\n          >\n            Go Home\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n\nQuestionDisplay.propTypes = {\n  authedUser: PropTypes.string,\n  ifAnswered: PropTypes.bool,\n  match: PropTypes.object,\n  question: PropTypes.object,\n  /**\n   * QuestionDisplay questionID\n   */\n  questionID: PropTypes.string,\n};\n\nQuestionDisplay.defaultProps = {\n  authedUser: '',\n  ifAnswered: false,\n  question: {},\n  questionID: '',\n};\n\n/**\n * Maps state to QuestionDisplay component props\n * @param {state} state\n * @param {{questionID: id}} ownProps\n * @return {{question: question}}\n */\nconst mapStateToProps = ({authedUser, questions}, {match, question}) => ({\n  authedUser,\n  ifAnswered: getIfAnswered(\n      authedUser,\n      match?.params?.question_id,\n      questions,\n      question,\n  ),\n  question: getQuestion(match?.params?.question_id, questions),\n});\n\n// QuestionDisplay export\nexport default withRouter(connect(mapStateToProps)(QuestionDisplay));\n","// Module import\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Action import\nimport {setAuthedUser} from 'redux/actions/authedUser';\n\n// Component import\nimport UserCard from 'components/container/UserCard';\n\n// Selector import\nimport {getUserIDs} from 'redux/selectors';\nimport {Redirect} from 'react-router-dom';\n\n/**\n * Maps state to Dashboard component props\n * @component\n * @param {{userIDs: id[], setAuthedUser: function}} props\n * @return {object} - The UI DOM object\n *\n * @example\n * return <Login />\n */\nconst Login = (props) =>\n  props.authedUser ? (\n    <Redirect to={props.location?.state?.from?.pathname} />\n  ) : (\n    <div className=\"col-12 col-xl-5\">\n      <h2 className=\"mb-3\">Login as:</h2>\n      <div className=\"row row-cols-1\">\n        {props.userIDs.map((userID) => (\n          <UserCard\n            className={`card--auth card--auth--${userID}\n            shadow mb-2 mb-sm-4 p-3`}\n            key={userID}\n            userID={userID}\n            onSetAuthedUser={props.setAuthedUser}\n          />\n        ))}\n      </div>\n    </div>\n  );\n\nLogin.propTypes = {\n  authedUser: PropTypes.string,\n  location: PropTypes.object,\n  setAuthedUser: PropTypes.func,\n  userIDs: PropTypes.array,\n};\n\nLogin.defaultProps = {\n  authedUser: '',\n  location: {},\n  setAuthedUser: () => {},\n  userIDs: [],\n};\n\n/**\n * Maps state to Login component props\n * @param {state} state\n * @return {{userIDs: id[]}}\n */\nconst mapStateToProps = ({authedUser, users}) => ({\n  authedUser,\n  userIDs: getUserIDs(users),\n});\n\n// Login export\nexport default connect(mapStateToProps, {setAuthedUser})(Login);\n","// Module imports\nimport {connect} from 'react-redux';\nimport {Redirect, Route} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport Layout from 'components/presentation/Layout';\n\n/**\n * PrivateRoute component\n * @component\n * @param {*} props\n * @return {object} - The UI DOM object\n *\n * @example\n * const path = {path}\n * return <PrivateRoute path={path}><Home /></PrivateRoute>\n */\nconst PrivateRoute = ({authedUser, children, ...rest}) => (\n  <Route\n    {...rest}\n    render={({location}) =>\n      authedUser ? (\n        <Layout authedUser={authedUser}>{children}</Layout>\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: {from: location},\n          }}\n        />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  authedUser: PropTypes.string,\n  children: PropTypes.element,\n};\n\nPrivateRoute.defaultProps = {\n  authedUser: '',\n  children: <div></div>,\n};\n\n/**\n * Maps state to PrivateRoute component props\n * @param {state} state\n * @return {{authedUser: id}}\n */\nconst mapStateToProps = ({authedUser}) => ({authedUser});\n\n// Private route export\nexport default connect(mapStateToProps)(PrivateRoute);\n","// Module imports\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Selector imports\nimport {getSortedUserIDs} from 'redux/selectors';\nimport UserCard from './UserCard';\n\n/**\n * Leaderboard component\n * @component\n * @return {object} - The UI DOM object\n *\n */\nconst Leaderboard = ({userIDs}) =>\n  userIDs.map((id) => (\n    <UserCard key={id} className=\"card card--leaderboard mb-3\" userID={id} />\n  ));\n\nLeaderboard.propTypes = {\n  userIDs: PropTypes.array,\n};\n\nLeaderboard.defaultProps = {\n  userIDs: [],\n};\n\n/**\n *\n * @param {state} state\n * @return {{userIDs: id[]}}\n */\nconst mapStateToProps = ({users}) => ({userIDs: getSortedUserIDs(users)});\n\n// Leaderboard export\nexport default connect(mapStateToProps)(Leaderboard);\n","// Module imports\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport NotFound from 'components/presentation/NotFound';\nimport Layout from 'components/presentation/Layout';\nimport QuestionForm from 'components/container/QuestionForm';\nimport QuestionContainer from 'components/container/QuestionContainer';\nimport QuestionDisplay from 'components/container/QuestionDisplay';\nimport Login from 'components/container/Login';\nimport PrivateRoute from './PrivateRoute';\nimport Leaderboard from 'components/container/Leaderboard';\n\n/**\n * Routes component\n * @component\n * @return {object} - The UI DOM object\n *\n * @example\n * return <Routes />\n */\nconst Routes = ({authedUser}) => {\n  // const basename = window.location.href.includes('localhost') ?\n  //   '/' :\n  //   '/would-you-rather';\n\n  return (\n    <Router basename={'/'}>\n      <Switch>\n        <Route\n          path=\"/login\"\n          render={(props) => (\n            <Layout authedUser={authedUser}>\n              <Login {...props} />\n            </Layout>\n          )}\n        />\n        <PrivateRoute exact path=\"/\">\n          <QuestionContainer />\n        </PrivateRoute>\n        <PrivateRoute path=\"/add\">\n          <QuestionForm />\n        </PrivateRoute>\n        <PrivateRoute path=\"/leaderboard\">\n          <Leaderboard />\n        </PrivateRoute>\n        <PrivateRoute path=\"/questions/:question_id\">\n          <QuestionDisplay />\n        </PrivateRoute>\n        <Route\n          render={(props) => (\n            <Layout authedUser={authedUser} notFound={true} {...props}>\n              <NotFound {...props} />\n            </Layout>\n          )}\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nRoutes.propTypes = {\n  authedUser: PropTypes.string,\n};\n\nRoutes.defaultProps = {\n  authedUser: '',\n};\n\n/**\n * Maps state to Routes component props\n * @param {state} state\n * @return {{authedUser: id}}\n */\nconst mapStateToProps = ({authedUser}) => ({\n  authedUser,\n});\n\n// Routes export\nexport default connect(mapStateToProps)(Routes);\n","// Module imports\nimport {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {LoadingBar} from 'react-redux-loading';\n\n// Action creator imports\nimport {handleInitialData} from 'redux/actions/shared';\n\n// Routes import\nimport Routes from 'routes';\n\n// Selector imports\nimport {getLoading} from 'redux/selectors';\n\n// Style import\nimport './app.css';\n\n/**\n * App component\n * @component\n *\n * @example\n * return <App />\n */\nclass App extends Component {\n  static propTypes = {\n    handleInitialData: PropTypes.func,\n    loading: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    handleInitialData: () => {},\n    loading: true,\n  };\n\n  /**\n   * Executes once component mounts\n   * @return {actionCreator}\n   */\n  componentDidMount = () => this.props.handleInitialData();\n\n  /**\n   * Renders the App UI\n   * @return {object} - The UI DOM object\n   */\n  render = () => (\n    <>\n      <LoadingBar />\n      {!this.props.loading && <Routes />}\n    </>\n  );\n}\n\n\n/**\n * Maps state to App component props\n * @param {state} state\n * @return {{loading: bool}}\n */\nconst mapStateToProps = ({questions, users}) => ({\n  loading: getLoading(questions, users),\n});\n\n// App export\nexport default connect(mapStateToProps, {handleInitialData})(App);\n","// API import\nimport {getInitialData} from 'utils/api';\nimport {hideLoading, showLoading} from 'react-redux-loading';\n\n// Action creator imports\nimport {receiveQuestions} from 'redux/actions/questions';\nimport {receiveUsers} from 'redux/actions/users';\n\n/**\n * Async action creator to handle initial data\n * @return {actionCreator}\n */\nexport const handleInitialData = () => (dispatch) => {\n  dispatch(showLoading());\n  return getInitialData().then(({questions, users}) => {\n    dispatch(receiveQuestions(questions));\n    dispatch(receiveUsers(users));\n    dispatch(hideLoading());\n  });\n};\n","// Type imports\nimport {RECEIVE_USERS} from 'redux/actions/types';\n\n/**\n * Action creator for received users\n * @param {users} users - Users received from fetch\n * @return {action} - Action to dispatch\n */\nexport const receiveUsers = (users) => ({type: RECEIVE_USERS, users});\n","// Module imports\nimport {SET_AUTHED_USER, UNSET_AUTHED_USER} from 'redux/actions/types';\n\n/**\n * Reducer function for authedUser\n * @param {id | null} state - current authedUser state\n * @param {action} action - Redux action\n * @return {id | null} - returned authedUser state\n */\nconst authedUser = (state = null, action) => {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.userID;\n    case UNSET_AUTHED_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\n// Export authedUser reducer\nexport default authedUser;\n","/**\n * Reducer function for questions\n * @param {questions} state - current questions state\n * @param {action} action - Redux action\n * @return {questions} - returned questions state\n */\nconst questions = (state = {}, action) => {\n  /**\n   * @type {id}\n   */\n  const questionID = action?.questionID;\n\n  /**\n   * @type {string}\n   */\n  const option = action?.option;\n\n  /**\n   * @type {option}\n   */\n  const updatedOptionAdd = option ?\n    {\n      ...state[questionID][option],\n      votes: [...state[questionID][option].votes, action.userID],\n    } :\n    state[questionID] && state[questionID][option];\n\n  /**\n   * @type {option}\n   */\n  const updatedOptionRemove = option ?\n    {\n      ...state[questionID][option],\n      votes: (state[questionID][option].votes || []).filter(\n          (i) => i !== action.userID,\n      ),\n    } :\n    state[questionID] && state[questionID][option];\n\n  return (\n    {\n      RECEIVE_QUESTIONS: action?.questions,\n      SAVE_QUESTION: {\n        ...state,\n        [questionID]: action?.question,\n      },\n      SAVE_QUESTION_ANSWER: {\n        ...state,\n        [questionID]: {\n          ...state[questionID],\n          [option]: updatedOptionAdd,\n        },\n      },\n      REMOVE_QUESTION_ANSWER: {\n        ...state,\n        [questionID]: {\n          ...state[questionID],\n          [option]: updatedOptionRemove,\n        },\n      },\n    }[action.type] || state\n  );\n};\n\n// Export questions reducer\nexport default questions;\n","/**\n * Reducer function for users\n * @param {users} state - current users state\n * @param {action} action - Redux action\n * @return {users} - returned users state\n */\nconst users = (state = {}, action) => {\n  /**\n   * @type {string}\n   */\n  const option = action?.option;\n\n  /**\n   * @type {id}\n   */\n  const userID = action?.userID;\n\n  /**\n   * @type {id}\n   */\n  const questionID = action?.questionID;\n\n  /**\n   * @type {id[]}\n   */\n  const updatedQuestions = questionID ?\n    [...(state[userID]?.questions || []), questionID] :\n    state[userID]?.questions;\n\n  /**\n   * @type {answer}\n   */\n  const updatedAnswersAdd = userID ?\n    {\n      ...state[userID].answers,\n      [questionID]: option,\n    } :\n    state[userID]?.answers;\n\n  /**\n   * @type {answer}\n   */\n  const updatedAnswersRemove = userID ?\n    {\n      ...state[userID].answers,\n      [questionID]: undefined,\n    } :\n    state[userID]?.answers;\n\n  return (\n    {\n      RECEIVE_USERS: {...state, ...action.users},\n      SAVE_QUESTION: {\n        ...state,\n        [userID]: {\n          ...state[userID],\n          questions: updatedQuestions,\n        },\n      },\n      REMOVE_QUESTION_ANSWER: {\n        ...state,\n        [userID]: {\n          ...state[userID],\n          answers: updatedAnswersRemove,\n        },\n      },\n      SAVE_QUESTION_ANSWER: {\n        ...state,\n        [userID]: {\n          ...state[userID],\n          answers: updatedAnswersAdd,\n        },\n      },\n    }[action.type] || state\n  );\n};\n\n// Export users reducer\nexport default users;\n","// Module import\nimport {combineReducers} from 'redux';\nimport {loadingBarReducer} from 'react-redux-loading';\n\n// Reducer imports\nimport authedUser from 'redux/reducers/authedUser';\nimport questions from 'redux/reducers/questions';\nimport users from 'redux/reducers/users';\n\n// Export combineReducers\nexport default combineReducers({\n  authedUser,\n  loadingBar: loadingBarReducer,\n  questions,\n  users,\n});\n","/**\n * Logger middleware\n * @param {store} store - Redux store object\n * @return {function}\n */\nconst logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log('The action: ', action);\n  const returnValue = next(action);\n  console.log('The new state: ', store.getState());\n  console.groupEnd();\n\n  return returnValue;\n};\n\n\n// Logger export\nexport default logger;\n","// Module imports\nimport {applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\n// Middleware import\nimport logger from 'redux/middleware/logger';\n\n// Export root middleware\nexport default applyMiddleware(thunk, logger );\n","// Module import\nimport {createStore} from 'redux';\n\n// Combinereducers import\nimport reducers from 'redux/reducers';\n\n// Middleware import\nimport middleware from 'redux/middleware';\n\n/**\n * Redux store\n * @type {store}\n */\nconst store = createStore(reducers, middleware );\n\n// Store export\nexport default store;\n","// Module imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport * as serviceWorkerRegistration from 'serviceWorkerRegistration';\nimport reportWebVitals from 'reportWebVitals';\n\n// Component import\nimport App from 'components/container/App';\n\n// Store import\nimport store from 'redux/store';\n\n// Style import\nimport 'index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// TODO: Register service worker after successful deployment\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}